{"ast":null,"code":"var _jsxFileName = \"/home/insultados/my-app/src/components/feed/FeedContainer.jsx\",\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport FeedPost from \"./FeedPost\";\nimport classes from './FeedContainer.module.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://127.0.0.1:5000/api/\";\nconst renderFeedContainerContent = response => {\n  if (response !== null && response !== Promise) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.feed_container_content,\n      children: response['posts'].map((e, index) => /*#__PURE__*/_jsxDEV(FeedPost, {\n        post: e,\n        post_img: response['img'][index],\n        post_num: response['posts'].indexOf(e)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.feed_container_content,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"SERVER RESPONSE ERROR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n};\nconst FeedContainer = () => {\n  _s2();\n  const [requestType, setRequestType] = useState(false);\n  let response = null;\n  try {\n    var _s = $RefreshSig$();\n    const request = function (method, url) {\n      let body = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      return fetch(url, {\n        method: method,\n        body: body\n      }).then(request => {\n        return request.json();\n      });\n    };\n    const start = async () => {\n      _s();\n      let response = await request('GET', url);\n      useEffect(() => {\n        effect;\n        return () => {\n          cleanup;\n        };\n      }, [input]);\n      true;\n      return response;\n    };\n    _s(start, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n    response = start(response);\n  } catch {\n    console.log('Server request error');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.feed_container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.feed_container_header,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u041F\\u041E\\u0421\\u041B\\u0415\\u0414\\u041D\\u0418\\u0415 \\u041D\\u041E\\u0412\\u041E\\u0421\\u0422\\u0415\\u0419\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), renderFeedContainerContent(response)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s2(FeedContainer, \"eYkEP+s/ZpA3aWSBwENjb+2UVSA=\");\n_c = FeedContainer;\nexport default FeedContainer;\nvar _c;\n$RefreshReg$(_c, \"FeedContainer\");","map":{"version":3,"names":["React","FeedPost","classes","useState","jsxDEV","_jsxDEV","url","renderFeedContainerContent","response","Promise","className","feed_container_content","children","map","e","index","post","post_img","post_num","indexOf","fileName","_jsxFileName","lineNumber","columnNumber","FeedContainer","_s2","requestType","setRequestType","_s","$RefreshSig$","request","method","body","arguments","length","undefined","fetch","then","json","start","useEffect","effect","cleanup","input","console","log","feed_container","feed_container_header","_c","$RefreshReg$"],"sources":["/home/insultados/my-app/src/components/feed/FeedContainer.jsx"],"sourcesContent":["import React from \"react\";\nimport FeedPost from \"./FeedPost\";\nimport classes from './FeedContainer.module.css'\nimport { useState } from \"react\";\n\n\nconst url = \"http://127.0.0.1:5000/api/\"\n\n\nconst renderFeedContainerContent = (response) => {\n\n    if (response !== null && response !== Promise) {\n        return (\n            <div className={classes.feed_container_content}>\n                {response['posts'].map((e, index) => (\n                    <FeedPost key={index} post={e} post_img={response['img'][index]} post_num={response['posts'].indexOf(e)} />\n                ))}\n            </div>)\n    }\n    else {\n        return (\n            <div className={classes.feed_container_content}>\n                <p>SERVER RESPONSE ERROR</p>\n            </div>)\n    }\n}\n\nconst FeedContainer = () => {\n\n    const [requestType, setRequestType ] = useState(false)\n\n    let response = null;\n\n    try {\n\n        const request = (method, url, body = null) => {\n            return fetch(url, {\n                method: method,\n                body: body\n            }).then(request => {\n                return request.json()\n            })\n        }\n\n        const start = async () => {\n            let response = await request('GET', url)\n            useEffect(() => {\n                effect\n                return () => {\n                    cleanup\n                };\n            }, [input]);(true)\n            return response\n        }\n\n        response = start(response)\n    }\n\n    catch {\n        console.log('Server request error')\n    }\n\n\n    return (\n        <div className={classes.feed_container}>\n            <div className={classes.feed_container_header}>\n                <p>ПОСЛЕДНИЕ НОВОСТЕЙ</p>\n            </div>\n            {renderFeedContainerContent(response)}\n        </div>\n    )\n}\n\nexport default FeedContainer;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,4BAA4B;AAChD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjC,MAAMC,GAAG,GAAG,4BAA4B;AAGxC,MAAMC,0BAA0B,GAAIC,QAAQ,IAAK;EAE7C,IAAIA,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAKC,OAAO,EAAE;IAC3C,oBACIJ,OAAA;MAAKK,SAAS,EAAER,OAAO,CAACS,sBAAuB;MAAAC,QAAA,EAC1CJ,QAAQ,CAAC,OAAO,CAAC,CAACK,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBAC5BV,OAAA,CAACJ,QAAQ;QAAae,IAAI,EAAEF,CAAE;QAACG,QAAQ,EAAET,QAAQ,CAAC,KAAK,CAAC,CAACO,KAAK,CAAE;QAACG,QAAQ,EAAEV,QAAQ,CAAC,OAAO,CAAC,CAACW,OAAO,CAACL,CAAC;MAAE,GAAzFC,KAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACvB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA;EACd,CAAC,MACI;IACD,oBACIlB,OAAA;MAAKK,SAAS,EAAER,OAAO,CAACS,sBAAuB;MAAAC,QAAA,eAC3CP,OAAA;QAAAO,QAAA,EAAG;MAAqB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAI;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1B;EACd;AACJ,CAAC;AAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAExB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAE,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAEtD,IAAIK,QAAQ,GAAG,IAAI;EAEnB,IAAI;IAAA,IAAAoB,EAAA,GAAAC,YAAA;IAEA,MAAMC,OAAO,GAAG,SAAAA,CAACC,MAAM,EAAEzB,GAAG,EAAkB;MAAA,IAAhB0B,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;MACrC,OAAOG,KAAK,CAAC9B,GAAG,EAAE;QACdyB,MAAM,EAAEA,MAAM;QACdC,IAAI,EAAEA;MACV,CAAC,CAAC,CAACK,IAAI,CAACP,OAAO,IAAI;QACf,OAAOA,OAAO,CAACQ,IAAI,EAAE;MACzB,CAAC,CAAC;IACN,CAAC;IAED,MAAMC,KAAK,GAAG,MAAAA,CAAA,KAAY;MAAAX,EAAA;MACtB,IAAIpB,QAAQ,GAAG,MAAMsB,OAAO,CAAC,KAAK,EAAExB,GAAG,CAAC;MACxCkC,SAAS,CAAC,MAAM;QACZC,MAAM;QACN,OAAO,MAAM;UACTC,OAAO;QACX,CAAC;MACL,CAAC,EAAE,CAACC,KAAK,CAAC,CAAC;MAAE,IAAI;MACjB,OAAOnC,QAAQ;IACnB,CAAC;IAAAoB,EAAA,CATKW,KAAK;IAWX/B,QAAQ,GAAG+B,KAAK,CAAC/B,QAAQ,CAAC;EAC9B,CAAC,CAED,MAAM;IACFoC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EACvC;EAGA,oBACIxC,OAAA;IAAKK,SAAS,EAAER,OAAO,CAAC4C,cAAe;IAAAlC,QAAA,gBACnCP,OAAA;MAAKK,SAAS,EAAER,OAAO,CAAC6C,qBAAsB;MAAAnC,QAAA,eAC1CP,OAAA;QAAAO,QAAA,EAAG;MAAkB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAI;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvB,EACLhB,0BAA0B,CAACC,QAAQ,CAAC;EAAA;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACnC;AAEd,CAAC;AAAAE,GAAA,CA5CKD,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AA8CnB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}