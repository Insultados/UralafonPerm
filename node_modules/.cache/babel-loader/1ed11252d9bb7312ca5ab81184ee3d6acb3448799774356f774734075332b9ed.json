{"ast":null,"code":"var _jsxFileName = \"/home/insultados/my-app/src/components/feed/FeedContainer.jsx\";\nimport React from \"react\";\nimport FeedPost from \"./FeedPost\";\nimport classes from './FeedContainer.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://127.0.0.1:5000/api/\";\nlet response = null;\nconst xhr = new XMLHttpRequest();\nxhr.open('GET', url);\nxhr.responseType = 'json';\nxhr.onload = () => {\n  response = xhr.response;\n  const renderFeedContainerContent = response => {\n    if (response !== null && response !== Promise) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.feed_container_content,\n        children: response['posts'].map((e, index) => /*#__PURE__*/_jsxDEV(FeedPost, {\n          post: e,\n          post_img: response['img'][index],\n          post_num: response['posts'].indexOf(e)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.feed_container_content,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"SERVER RESPONSE ERROR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this);\n    }\n  };\n  const FeedContainer = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.feed_container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.feed_container_header,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041F\\u041E\\u0421\\u041B\\u0415\\u0414\\u041D\\u0418\\u0415 \\u041D\\u041E\\u0412\\u041E\\u0421\\u0422\\u0415\\u0419\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), renderFeedContainerContent(response)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this);\n  };\n};\nxhr.send();\nexport default FeedContainer;","map":{"version":3,"names":["React","FeedPost","classes","jsxDEV","_jsxDEV","url","response","xhr","XMLHttpRequest","open","responseType","onload","renderFeedContainerContent","Promise","className","feed_container_content","children","map","e","index","post","post_img","post_num","indexOf","fileName","_jsxFileName","lineNumber","columnNumber","FeedContainer","feed_container","feed_container_header","send"],"sources":["/home/insultados/my-app/src/components/feed/FeedContainer.jsx"],"sourcesContent":["import React from \"react\";\nimport FeedPost from \"./FeedPost\";\nimport classes from './FeedContainer.module.css'\n\n\nconst url = \"http://127.0.0.1:5000/api/\"\n\nlet response = null;\n\n    const xhr = new XMLHttpRequest()\n    xhr.open('GET', url)\n    xhr.responseType = 'json'\n    xhr.onload = () => {\n        response = xhr.response\n        const renderFeedContainerContent = (response) => {\n            if (response !== null && response !== Promise) {\n                return (\n                    <div className={classes.feed_container_content}>\n                        {response['posts'].map((e, index) => (\n                            <FeedPost key={index} post={e} post_img={response['img'][index]} post_num={response['posts'].indexOf(e)} />\n                        ))}\n                    </div>)\n            }\n            else {\n                return (\n                    <div className={classes.feed_container_content}>\n                        <p>SERVER RESPONSE ERROR</p>\n                    </div>)\n            }\n        }\n\n        const FeedContainer = () => {\n\n\n            return (\n                <div className={classes.feed_container}>\n                    <div className={classes.feed_container_header}>\n                        <p>ПОСЛЕДНИЕ НОВОСТЕЙ</p>\n                    </div>\n                    {renderFeedContainerContent(response)}\n                </div>\n            )\n        }\n\n    }\n\n    xhr.send()\n\n\n\nexport default FeedContainer;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGhD,MAAMC,GAAG,GAAG,4BAA4B;AAExC,IAAIC,QAAQ,GAAG,IAAI;AAEf,MAAMC,GAAG,GAAG,IAAIC,cAAc,EAAE;AAChCD,GAAG,CAACE,IAAI,CAAC,KAAK,EAAEJ,GAAG,CAAC;AACpBE,GAAG,CAACG,YAAY,GAAG,MAAM;AACzBH,GAAG,CAACI,MAAM,GAAG,MAAM;EACfL,QAAQ,GAAGC,GAAG,CAACD,QAAQ;EACvB,MAAMM,0BAA0B,GAAIN,QAAQ,IAAK;IAC7C,IAAIA,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAKO,OAAO,EAAE;MAC3C,oBACIT,OAAA;QAAKU,SAAS,EAAEZ,OAAO,CAACa,sBAAuB;QAAAC,QAAA,EAC1CV,QAAQ,CAAC,OAAO,CAAC,CAACW,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBAC5Bf,OAAA,CAACH,QAAQ;UAAamB,IAAI,EAAEF,CAAE;UAACG,QAAQ,EAAEf,QAAQ,CAAC,KAAK,CAAC,CAACa,KAAK,CAAE;UAACG,QAAQ,EAAEhB,QAAQ,CAAC,OAAO,CAAC,CAACiB,OAAO,CAACL,CAAC;QAAE,GAAzFC,KAAK;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACvB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACA;IACd,CAAC,MACI;MACD,oBACIvB,OAAA;QAAKU,SAAS,EAAEZ,OAAO,CAACa,sBAAuB;QAAAC,QAAA,eAC3CZ,OAAA;UAAAY,QAAA,EAAG;QAAqB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC1B;IACd;EACJ,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAGxB,oBACIxB,OAAA;MAAKU,SAAS,EAAEZ,OAAO,CAAC2B,cAAe;MAAAb,QAAA,gBACnCZ,OAAA;QAAKU,SAAS,EAAEZ,OAAO,CAAC4B,qBAAsB;QAAAd,QAAA,eAC1CZ,OAAA;UAAAY,QAAA,EAAG;QAAkB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACvB,EACLf,0BAA0B,CAACN,QAAQ,CAAC;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnC;EAEd,CAAC;AAEL,CAAC;AAEDpB,GAAG,CAACwB,IAAI,EAAE;AAId,eAAeH,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}