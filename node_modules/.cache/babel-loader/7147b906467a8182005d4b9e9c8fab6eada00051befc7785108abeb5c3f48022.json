{"ast":null,"code":"var _jsxFileName = \"/home/insultados/my-app/src/components/feed/FeedContainer.jsx\";\nimport React from \"react\";\nimport FeedPost from \"./FeedPost\";\nimport classes from './FeedContainer.module.css';\nimport $ from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n$.ajaxSetup({\n  // тип запроса\n  type: \"POST\",\n  data: {},\n  dataType: 'json',\n  xhrFields: {\n    withCredentials: true\n  },\n  crossDomain: true,\n  contentType: 'application/json; charset=utf-8'\n});\nfunction sendJSON(user_data, user_url, req_type) {\n  // запрос на сервер\n  let xhr = new XMLHttpRequest();\n  let url = \"https://www.uralafonperm.ru/\" + user_url;\n  xhr.open(req_type, url, false);\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === 4 && xhr.status === 200) {\n      console.log(req_type + ' request was received');\n    }\n  };\n  xhr.send(JSON.stringify(user_data));\n  return JSON.parse(xhr.responseText);\n}\nlet response = null;\ntry {\n  response = sendJSON('', '/api/v1/', 'GET');\n} catch {\n  console.log('Server requeet error');\n}\nconst renderFeedContainerContent = response => {\n  if (response != null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.feed_container_content,\n      children: response['posts'].map((e, index) => /*#__PURE__*/_jsxDEV(FeedPost, {\n        post: e,\n        post_img: response['img'][index],\n        post_num: response['posts'].indexOf(e)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.feed_container_content,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"SERVER RESPONSE ERROR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n};\nconst FeedContainer = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.feed_container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.feed_container_header,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u041F\\u041E\\u0421\\u041B\\u0415\\u0414\\u041D\\u0418\\u0415 \\u041D\\u041E\\u0412\\u041E\\u0421\\u0422\\u0415\\u0419\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), renderFeedContainerContent(response)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_c = FeedContainer;\nexport default FeedContainer;\nvar _c;\n$RefreshReg$(_c, \"FeedContainer\");","map":{"version":3,"names":["React","FeedPost","classes","$","jsxDEV","_jsxDEV","ajaxSetup","type","data","dataType","xhrFields","withCredentials","crossDomain","contentType","sendJSON","user_data","user_url","req_type","xhr","XMLHttpRequest","url","open","setRequestHeader","onreadystatechange","readyState","status","console","log","send","JSON","stringify","parse","responseText","response","renderFeedContainerContent","className","feed_container_content","children","map","e","index","post","post_img","post_num","indexOf","fileName","_jsxFileName","lineNumber","columnNumber","FeedContainer","feed_container","feed_container_header","_c","$RefreshReg$"],"sources":["/home/insultados/my-app/src/components/feed/FeedContainer.jsx"],"sourcesContent":["import React from \"react\";\nimport FeedPost from \"./FeedPost\";\nimport classes from './FeedContainer.module.css'\nimport $ from 'jquery'\n\n\n\n$.ajaxSetup({ // тип запроса\n    type: \"POST\",\n    data: {},\n    dataType: 'json',\n    xhrFields: {\n        withCredentials: true\n    },\n    crossDomain: true,\n    contentType: 'application/json; charset=utf-8'\n});\n\n\nfunction sendJSON(user_data, user_url, req_type) { // запрос на сервер\n    let xhr = new XMLHttpRequest();\n    let url = \"https://www.uralafonperm.ru/\" + user_url;\n    xhr.open(req_type, url, false);\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4 && xhr.status === 200) {\n            console.log(req_type + ' request was received');\n        }\n    };\n    xhr.send(JSON.stringify(user_data));\n    return JSON.parse(xhr.responseText);\n}\n\nlet response = null;\ntry {\n    response = sendJSON('', '/api/v1/', 'GET');\n}\ncatch {\n    console.log('Server requeet error')\n}\n\nconst renderFeedContainerContent = (response) => {\n    if (response != null) {\n        return (\n            <div className={classes.feed_container_content}>\n                {response['posts'].map((e, index) => (\n                    <FeedPost key={index} post={e} post_img={response['img'][index]} post_num={response['posts'].indexOf(e)} />\n                ))}\n            </div>)\n    }\n    else {\n        return (\n            <div className={classes.feed_container_content}>\n                <p>SERVER RESPONSE ERROR</p>\n            </div>)\n    }\n}\n\nconst FeedContainer = () => {\n\n\n    return (\n        <div className={classes.feed_container}>\n            <div className={classes.feed_container_header}>\n                <p>ПОСЛЕДНИЕ НОВОСТЕЙ</p>\n            </div>\n            {renderFeedContainerContent(response)}\n        </div>\n    )\n}\n\nexport default FeedContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}