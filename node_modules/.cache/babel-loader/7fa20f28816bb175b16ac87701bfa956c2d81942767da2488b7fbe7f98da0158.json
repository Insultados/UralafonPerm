{"ast":null,"code":"var _jsxFileName = \"/home/insultados/my-app/src/components/feed/FeedContainer.jsx\";\nimport React from \"react\";\nimport FeedPost from \"./FeedPost\";\nimport $ from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n$.ajaxPrefilter(function (options, original_Options, jqXHR) {\n  options.async = true;\n});\n$.ajaxSetup({\n  // тип запроса\n  type: \"POST\",\n  data: {},\n  dataType: 'json',\n  xhrFields: {\n    withCredentials: true\n  },\n  crossDomain: true,\n  contentType: 'application/json; charset=utf-8'\n});\nfunction sendJSON(user_data, user_url, req_type) {\n  // запрос на сервер\n  let xhr = new XMLHttpRequest();\n  let url = \"http://127.0.0.1:5000\" + user_url;\n  xhr.open(req_type, url, false);\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === 4 && xhr.status === 200) {\n      console.log(req_type + ' request was received');\n    }\n  };\n  xhr.send(JSON.stringify(user_data));\n  return JSON.parse(xhr.responseText);\n}\nconst FeedContainer = () => {\n  let response = sendJSON('', '/api/v1/', 'GET');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed_container_header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u041B\\u0415\\u041D\\u0422\\u0410 \\u041D\\u041E\\u0412\\u041E\\u0421\\u0422\\u0415\\u0419\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed_container_content\",\n      children: response.map(e => /*#__PURE__*/_jsxDEV(FeedPost, {\n        res: response['posts'][0],\n        post_num: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_c = FeedContainer;\nexport default FeedContainer;\nvar _c;\n$RefreshReg$(_c, \"FeedContainer\");","map":{"version":3,"names":["React","FeedPost","$","jsxDEV","_jsxDEV","ajaxPrefilter","options","original_Options","jqXHR","async","ajaxSetup","type","data","dataType","xhrFields","withCredentials","crossDomain","contentType","sendJSON","user_data","user_url","req_type","xhr","XMLHttpRequest","url","open","setRequestHeader","onreadystatechange","readyState","status","console","log","send","JSON","stringify","parse","responseText","FeedContainer","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","e","res","post_num","_c","$RefreshReg$"],"sources":["/home/insultados/my-app/src/components/feed/FeedContainer.jsx"],"sourcesContent":["import React from \"react\";\nimport FeedPost from \"./FeedPost\";\nimport $ from 'jquery'\n\n\n\n$.ajaxPrefilter(function (options, original_Options, jqXHR) {\n    options.async = true;\n});\n\n$.ajaxSetup({ // тип запроса\n    type: \"POST\",\n    data: {},\n    dataType: 'json',\n    xhrFields: {\n        withCredentials: true\n    },\n    crossDomain: true,\n    contentType: 'application/json; charset=utf-8'\n});\n\n\nfunction sendJSON(user_data, user_url, req_type) { // запрос на сервер\n    let xhr = new XMLHttpRequest();\n    let url = \"http://127.0.0.1:5000\" + user_url;\n    xhr.open(req_type, url, false);\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4 && xhr.status === 200) {\n            console.log(req_type + ' request was received');\n        }\n    };\n    xhr.send(JSON.stringify(user_data));\n    return JSON.parse(xhr.responseText);\n}\n\n\nconst FeedContainer = () => {\n\n    let response = sendJSON('', '/api/v1/', 'GET');\n\n    return (\n        <div className=\"feed_container\">\n            <div className=\"feed_container_header\">\n                <p>ЛЕНТА НОВОСТЕЙ</p>\n            </div>\n            <div className=\"feed_container_content\">\n                {response.map(e => (\n                    <FeedPost res={response['posts'][0]} post_num={0} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default FeedContainer;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,CAAC,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAItBF,CAAC,CAACG,aAAa,CAAC,UAAUC,OAAO,EAAEC,gBAAgB,EAAEC,KAAK,EAAE;EACxDF,OAAO,CAACG,KAAK,GAAG,IAAI;AACxB,CAAC,CAAC;AAEFP,CAAC,CAACQ,SAAS,CAAC;EAAE;EACVC,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE,CAAC,CAAC;EACRC,QAAQ,EAAE,MAAM;EAChBC,SAAS,EAAE;IACPC,eAAe,EAAE;EACrB,CAAC;EACDC,WAAW,EAAE,IAAI;EACjBC,WAAW,EAAE;AACjB,CAAC,CAAC;AAGF,SAASC,QAAQA,CAACC,SAAS,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;EAAE;EAC/C,IAAIC,GAAG,GAAG,IAAIC,cAAc,EAAE;EAC9B,IAAIC,GAAG,GAAG,uBAAuB,GAAGJ,QAAQ;EAC5CE,GAAG,CAACG,IAAI,CAACJ,QAAQ,EAAEG,GAAG,EAAE,KAAK,CAAC;EAC9BF,GAAG,CAACI,gBAAgB,CAAC,cAAc,EAAE,kBAAkB,CAAC;EACxDJ,GAAG,CAACK,kBAAkB,GAAG,YAAY;IACjC,IAAIL,GAAG,CAACM,UAAU,KAAK,CAAC,IAAIN,GAAG,CAACO,MAAM,KAAK,GAAG,EAAE;MAC5CC,OAAO,CAACC,GAAG,CAACV,QAAQ,GAAG,uBAAuB,CAAC;IACnD;EACJ,CAAC;EACDC,GAAG,CAACU,IAAI,CAACC,IAAI,CAACC,SAAS,CAACf,SAAS,CAAC,CAAC;EACnC,OAAOc,IAAI,CAACE,KAAK,CAACb,GAAG,CAACc,YAAY,CAAC;AACvC;AAGA,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAExB,IAAIC,QAAQ,GAAGpB,QAAQ,CAAC,EAAE,EAAE,UAAU,EAAE,KAAK,CAAC;EAE9C,oBACId,OAAA;IAAKmC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BpC,OAAA;MAAKmC,SAAS,EAAC,uBAAuB;MAAAC,QAAA,eAClCpC,OAAA;QAAAoC,QAAA,EAAG;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAI;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnB,eACNxC,OAAA;MAAKmC,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAClCF,QAAQ,CAACO,GAAG,CAACC,CAAC,iBACX1C,OAAA,CAACH,QAAQ;QAAC8C,GAAG,EAAET,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAE;QAACU,QAAQ,EAAE;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACpD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd,CAAC;AAAAK,EAAA,GAhBKZ,aAAa;AAkBnB,eAAeA,aAAa;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}